################题意描述######################

给定一个非空二叉树, 返回一个由每层节点平均值组成的数组.

示例 1:

输入:
    3
   / \
  9  20
    /  \
   15   7
输出: [3, 14.5, 11]
解释:
第0层的平均值是 3,  第1层是 14.5, 第2层是 11. 因此返回 [3, 14.5, 11].
注意：

节点值的范围在32位有符号整数范围内。

###############思路###################

使用两个列表来保存当前层与下一层的节点

##############代码####################

# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def averageOfLevels(self, root):
        """
        :type root: TreeNode
        :rtype: List[float]
        """
        if not root:
            return []
        queue = [root]
        res = []
        nextLayer = []
        current = []
        while queue:
            tmp = queue.pop(0)
            current.append(tmp.val)
            if tmp.left:
                nextLayer.append(tmp.left)
            if tmp.right:
                nextLayer.append(tmp.right)
            if not queue:
                res.append(float(sum(current))/len(current))
                current = []
                queue = nextLayer
                nextLayer = []
        return res
            

