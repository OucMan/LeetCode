##############题目描述##################

给定一个二叉搜索树和一个目标结果，如果 BST 中存在两个元素且它们的和等于给定的目标结果，则返回 true。

案例 1:

输入: 
    5
   / \
  3   6
 / \   \
2   4   7

Target = 9

输出: True
 

案例 2:

输入: 
    5
   / \
  3   6
 / \   \
2   4   7

Target = 28

输出: False

############思路################

首先中序排序，然后使用双指针来得到结果

#############代码###############

# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def findTarget(self, root, k):
        """
        :type root: TreeNode
        :type k: int
        :rtype: bool
        """
        if not root:
            return None
        nums = []
        self.inOrder(root, nums)
        i, j = 0, len(nums)-1
        while i < j:
            tmp = nums[i] + nums[j]
            if tmp == k:
                return True
            elif tmp > k:
                j = j-1
            else:
                i = i+1
        return False
    
    def inOrder(self, root, nums):
        if not root:
            return
        self.inOrder(root.left, nums)
        nums.append(root.val)
        self.inOrder(root.right, nums)
