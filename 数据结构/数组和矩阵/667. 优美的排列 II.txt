#################题目描述##################

给定两个整数 n 和 k，你需要实现一个数组，这个数组包含从 1 到 n 的 n 个不同整数，同时满足以下条件：

① 如果这个数组是 [a1, a2, a3, ... , an] ，那么数组 [|a1 - a2|, |a2 - a3|, |a3 - a4|, ... , |an-1 - an|] 中应该有且仅有 k 个不同整数；.

② 如果存在多种答案，你只需实现并返回其中任意一种.

示例 1:

输入: n = 3, k = 1
输出: [1, 2, 3]
解释: [1, 2, 3] 包含 3 个范围在 1-3 的不同整数， 并且 [1, 1] 中有且仅有 1 个不同整数 : 1
 

示例 2:

输入: n = 3, k = 2
输出: [1, 3, 2]
解释: [1, 3, 2] 包含 3 个范围在 1-3 的不同整数， 并且 [2, 1] 中有且仅有 2 个不同整数: 1 和 2
 

提示:

 n 和 k 满足条件 1 <= k < n <= 104.

############思路################

每次选取一个数字放到结果数组里面。选取的方式是依次从两头向中间取，这样取的时候，能够保证每次取一个数字就会产生一个不同的差值，也就需要把k减去一。当k还剩1的时候，把后面的数字从小到大排列即可，这样后面的数字的差值是1.也就是说，我们最后产生了k个不同的差值。

############代码#####################

class Solution(object):
    def constructArray(self, n, k):
        """
        :type n: int
        :type k: int
        :rtype: List[int]
        """
        l, r = 1, n
        res = []
        while l <= r:
            if k > 1:
                if k % 2 == 1:
                    res.append(l)
                    l = l + 1
                else:
                    res.append(r)
                    r = r - 1
            else:
                res.append(l)
                l = l + 1
            
            k = k - 1
        return res

