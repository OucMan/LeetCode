##############题目描述#####################

输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字。

示例 1：

输入：matrix = [[1,2,3],[4,5,6],[7,8,9]]
输出：[1,2,3,6,9,8,7,4,5]
示例 2：

输入：matrix = [[1,2,3,4],[5,6,7,8],[9,10,11,12]]
输出：[1,2,3,4,8,12,11,10,9,5,6,7]
 

限制：

0 <= matrix.length <= 100
0 <= matrix[i].length <= 100

###############思路###################
输出第一行，然后逆时针旋转90度，再输出第一行，，，，，

################代码########################

class Solution(object):
    def spiralOrder(self, matrix):
        """
        :type matrix: List[List[int]]
        :rtype: List[int]
        """
        if not matrix or not matrix[0]:
            return []
        res = []
        while matrix:
            for item in matrix[0]:
                res.append(item)
            matrix = self.turn(matrix[1:])
        return res
    
    def turn(self, matrix):
        if not matrix or not matrix[0]:
            return []
        res = []
        for i in range(len(matrix[0])-1, -1, -1):
            tmp = []
            for j in range(len(matrix)):
                tmp.append(matrix[j][i])
            res.append(tmp)
        return res
