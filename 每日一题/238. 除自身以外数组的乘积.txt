###################题目描述####################

给你一个长度为 n 的整数数组 nums，其中 n > 1，返回输出数组 output ，其中 output[i] 等于 nums 中除 nums[i] 之外其余各元素的乘积。

示例:

输入: [1,2,3,4]
输出: [24,12,8,6]
 

提示：题目数据保证数组之中任意元素的全部前缀元素和后缀（甚至是整个数组）的乘积都在 32 位整数范围内。

说明: 请不要使用除法，且在 O(n) 时间复杂度内完成此题。

###################思路#######################

Ai = a1 * a2 * ... * a(i-1) * a(i+1) * an

两次遍历数组，第一遍从前向后，记录该元素之前的乘积，即a1 * a2 * ... * a(i-1)。从后向前遍历，记录元素后面的乘积a(i-1) * a(i+1) * an

#####################代码#########################

class Solution(object):
    def productExceptSelf(self, nums):
        """
        :type nums: List[int]
        :rtype: List[int]
        """
        tmp = [1] * len(nums)
        left = 1
        for i in range(len(nums)):
            tmp[i] = left
            left = left * nums[i]
        right = 1
        for j in range(len(nums)-1, -1, -1):
            tmp[j] = tmp[j] * right
            right = right * nums[j]
        return tmp
