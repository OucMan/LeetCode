#############题目描述##############

请根据每日 气温 列表，重新生成一个列表。对应位置的输出为：要想观测到更高的气温，至少需要等待的天数。如果气温在这之后都不会升高，请在该位置用 0 来代替。

例如，给定一个列表 temperatures = [73, 74, 75, 71, 69, 72, 76, 73]，你的输出应该是 [1, 1, 4, 2, 1, 1, 0, 0]。

提示：气温 列表长度的范围是 [1, 30000]。每个气温的值的均为华氏度，都是在 [30, 100] 范围内的整数。

###############思路###################

栈

倒着处理

先将最后一天的温度入栈，然后从倒数第二个元素从后向前一次遍历

假如某天的温度大于栈顶的温度，则出栈，直到找到栈顶的温度大于某天的温度，这时就找到了栈顶天是最近一次超过这一天的温度。如果栈为空，说明未来没有一天的温度大于这一天，因此设置为0。无论哪种情况都需要将这天的温度入栈

###############代码################

class Solution(object):
    def dailyTemperatures(self, T):
        """
        :type T: List[int]
        :rtype: List[int]
        """
        n = len(T)
        res = [0] * n
        stack = [(T[-1], len(T)-1)]
        for i in range(n-2, -1, -1):
            while stack:
                if stack[-1][0] > T[i]:
                    res[i] = stack[-1][1] - i
                    break
                else:
                    stack.pop()
            if not stack:
                res[i] = 0
            stack.append((T[i], i))
        return res

        
