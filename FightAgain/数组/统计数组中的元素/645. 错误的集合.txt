# 题目

集合 S 包含从1到 n 的整数。不幸的是，因为数据错误，导致集合里面某一个元素复制了成了集合里面的另外一个元素的值，导致集合丢失了一个整数并且有一个元素重复。

给定一个数组 nums 代表了集合 S 发生错误后的结果。你的任务是首先寻找到重复出现的整数，再找到丢失的整数，将它们以数组的形式返回。

示例 1:

输入: nums = [1,2,2,4]
输出: [2,3]
注意:

给定数组的长度范围是 [2, 10000]。
给定的数组是无序的。

# 思路

对于重复的数字，借用字典，对于未出现的元素，使用集合

# 代码

class Solution(object):
    def findErrorNums(self, nums):
        """
        :type nums: List[int]
        :rtype: List[int]
        """
        n = len(nums)
        res0 = list(set(range(1, n+1)) - set(nums))
        tmp = {}
        for i in nums:
            if i in tmp:
                res1 = i
                break
            else:
                tmp[i] = 1
        return [res1, res0[0]]
        
        
