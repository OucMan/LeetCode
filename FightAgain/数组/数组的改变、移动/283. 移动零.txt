# 题目

给定一个数组 nums，编写一个函数将所有 0 移动到数组的末尾，同时保持非零元素的相对顺序。

示例:

输入: [0,1,0,3,12]
输出: [1,3,12,0,0]
说明:

必须在原数组上操作，不能拷贝额外的数组。
尽量减少操作次数。


# 思路

声明一个变量zero标记第一个0的位置，初始是0，遍历数组，当当前元素不是0时，将当前元素放到zero的位置，并且将zero向前移动一下；当当前元素为0时，不做操作，继续遍历


# 代码

class Solution(object):
    def moveZeroes(self, nums):
        """
        :type nums: List[int]
        :rtype: None Do not return anything, modify nums in-place instead.
        """
        N = len(nums)
        zero = 0
        for i in range(N):
            if nums[i] != 0:
                nums[zero] = nums[i]
                zero += 1
        for i in range(zero, N):
            nums[i] = 0
        
        
        
