# 题目

你的任务是计算 ab 对 1337 取模，a 是一个正整数，b 是一个非常大的正整数且会以数组形式给出。

 

示例 1：

输入：a = 2, b = [3]
输出：8
示例 2：

输入：a = 2, b = [1,0]
输出：1024
示例 3：

输入：a = 1, b = [4,3,3,8,5,2]
输出：1
示例 4：

输入：a = 2147483647, b = [2,0,0]
输出：1198
 

提示：

1 <= a <= 231 - 1
1 <= b.length <= 2000
0 <= b[i] <= 9
b 不含前导 0


# 思路

(a * b) % k = (a%k) * (b%k) % k

a^n % k = (a%k) ^ n % k

x ^ abc = x^c * x^ab0 = (x^c)*((x^ab)**10)

x ^ abc % k = (x^c % k)*((x^ab)^10 % k) % k = ((x%k)^c % k) * ((x^ab %k)^10 % k) % k 

据此式子，发现x ^ abc % k 可以使用x ^ ab来表示，因此递归求解

# 代码

class Solution(object):
    def superPow(self, a, b):
        """
        :type a: int
        :type b: List[int]
        :rtype: int
        """
        base = 1337
        if not b:
            return 1
        #  ((x%k)^c % k) * ((x^ab %k)^10 % k) % k 
        last = b.pop()
        part1 = (a % base) ** last % base
        part2 = (self.superPow(a, b) % base) ** 10 % base
        return (part1 * part2) % base
        
        
