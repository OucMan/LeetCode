# 题目

给定一个非负整数 n，计算各位数字都不同的数字 x 的个数，其中 0 ≤ x < 10n 。

示例:

输入: 2
输出: 91 
解释: 答案应为除去 11,22,33,44,55,66,77,88,99 外，在 [0,100) 区间内的所有数字。


# 思路

动态规划

当n=0时，返回1（0）
当n=1时，返回10（0~9）
当n=2时，第一位有9种可能（1~9），个位数有10-1=9种可能（0~9去掉前一位的可能），然后再加上n=1的总数
当n=3时，第一位有9种可能（1~9），十位数有10-1=9种可能，个位数有8种可能（0~9去掉前两位的可能），然后再加上n=2的总数
。。。
发现规律

f(n+1) = f(n) + 9 * 9 * 8 * ... * (11-n)

n > 10, 所有的位都有数事不会有满足条件的书，故 f(n) = f(10) n > 10

# 代码

class Solution(object):
    def countNumbersWithUniqueDigits(self, n):
        """
        :type n: int
        :rtype: int
        """
        if n == 0:
            return 1
        if n == 1:
            return 10
        res = 10
        k = 9
        tmp = 9
        for i in range(2, min(n+1, 11)):
            tmp = tmp * k
            k -= 1
            res += tmp
        return res



