# 题目

您需要在二叉树的每一行中找到最大的值。

示例：

输入: 

          1
         / \
        3   2
       / \   \  
      5   3   9 

输出: [1, 3, 9]


# 思路

层序遍历

# 代码

# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def largestValues(self, root):
        """
        :type root: TreeNode
        :rtype: List[int]
        """
        if not root:
            return []

        res = []
        cur_layer = []
        next_layer = []
        queue = [root]

        while queue:
            node = queue.pop(0)
            cur_layer.append(node.val)
            if node.left:
                next_layer.append(node.left)
            if node.right:
                next_layer.append(node.right)
            if not queue:
                queue = next_layer
                next_layer = []
                res.append(max(cur_layer))
                cur_layer = []
        
        return res

