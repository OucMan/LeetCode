# 题目

给定一个二叉树，计算 整个树 的坡度 。

一个树的 节点的坡度 定义即为，该节点左子树的节点之和和右子树节点之和的 差的绝对值 。如果没有左子树的话，左子树的节点之和为 0 ；没有右子树的话也是一样。空结点的坡度是 0 。

整个树 的坡度就是其所有节点的坡度之和。

# 思路

我们需要写出一个计算任意一个树中全部节点之和的函数，然后定义一个全局变量来记录坡度

# 代码

# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):

    def __init__(self):
        self.res = 0

    def findTilt(self, root):
        """
        :type root: TreeNode
        :rtype: int
        """
        if not root:
            return 0
        self.helper(root)
        return self.res
        
    # 计算树的节点和
    def helper(self, root):
        if not root:
            return 0
        if not root.left and not root.right:
            return root.val
        left = self.helper(root.left)
        right = self.helper(root.right)
        self.res += abs(left - right)
        return left + right + root.val
        
        
