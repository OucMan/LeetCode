# 题目

给定两个整数，分别表示分数的分子 numerator 和分母 denominator，以 字符串形式返回小数 。

如果小数部分为循环小数，则将循环的部分括在括号内。

如果存在多个答案，只需返回 任意一个 。

对于所有给定的输入，保证 答案字符串的长度小于 104 。

 

示例 1：

输入：numerator = 1, denominator = 2
输出："0.5"
示例 2：

输入：numerator = 2, denominator = 1
输出："2"
示例 3：

输入：numerator = 2, denominator = 3
输出："0.(6)"
示例 4：

输入：numerator = 4, denominator = 333
输出："0.(012)"
示例 5：

输入：numerator = 1, denominator = 5
输出："0.2"
 

提示：

-231 <= numerator, denominator <= 231 - 1
denominator != 0


# 思路

几种情况需要注意：

正负号；（两数相乘是否小于0）
是否有小数点，也就是能否被整除；（模运算）
如果有小数点的话，是否有循环；（按照除法的计算方式，循环相除）
如果有循环，如何添加括号；（使用字典保存小数的值，以及相应的位置）

# 代码

class Solution(object):
    def fractionToDecimal(self, numerator, denominator):
        """
        :type numerator: int
        :type denominator: int
        :rtype: str
        """
        if numerator == 0:
            return '0'
        res = []
        if numerator * denominator < 0:
            res.append('-')
        numerator = abs(numerator)
        denominator = abs(denominator)
        shang, yu = numerator // denominator, numerator % denominator
        res.append(str(shang))
        if yu == 0:
            return ''.join(res)
        res.append('.')
        tables = {}
        while yu != 0:
            if yu in tables:
                res.insert(tables[yu], '(')
                res.append(')')
                break
            tables[yu] = len(res)
            yu = 10 * yu
            shang, yu = yu // denominator, yu % denominator
            res.append(str(shang))
        return ''.join(res)
        
