# 题目

给定一个整数数组和一个整数 k，判断数组中是否存在两个不同的索引 i 和 j，使得 nums [i] = nums [j]，并且 i 和 j 的差的 绝对值 至多为 k。

示例 1:

输入: nums = [1,2,3,1], k = 3
输出: true
示例 2:

输入: nums = [1,0,1,1], k = 1
输出: true
示例 3:

输入: nums = [1,2,3,1,2,3], k = 2
输出: false


# 思路

借助字典，字典中保存当前时刻每一个元素的最右侧出现的位置，使用新出现的位置减去之前最右侧的位置，判断是否小于k


# 代码

class Solution(object):
    def containsNearbyDuplicate(self, nums, k):
        """
        :type nums: List[int]
        :type k: int
        :rtype: bool
        """
        table = {}
        for i, v in enumerate(nums):
            if v not in table:
                table[v] = i
            else:
                if i - table[v] <= k:
                    return True
                table[v] = i
        return False


