# 题目

在整数数组 nums 中，是否存在两个下标 i 和 j，使得 nums [i] 和 nums [j] 的差的绝对值小于等于 t ，且满足 i 和 j 的差的绝对值也小于等于 ķ 。

如果存在则返回 true，不存在返回 false。

 

示例 1:

输入: nums = [1,2,3,1], k = 3, t = 0
输出: true
示例 2:

输入: nums = [1,0,1,1], k = 1, t = 2
输出: true
示例 3:

输入: nums = [1,5,9,1,5,9], k = 2, t = 3
输出: false



# 思路

分类讨论

当k等于1时，即相邻元素之差绝对值小于等于k

当t等于0，即相同元素索引之差绝对值小于等于t

其他的情况，依次遍历列表，获得可能的全部结果，然后在这些结果中筛选满足题意的结果

sum([(1,2), (3), (4,5,6)], ()) = (1,2,3,4,5,6)


# 代码

class Solution(object):
    def containsNearbyAlmostDuplicate(self, nums, k, t):
        """
        :type nums: List[int]
        :type k: int
        :type t: int
        :rtype: bool
        """
        if t < 0 or k <= 0 or not nums:
            return False
        
        if k == 1:
            for i in range(len(nums)-1):
                if abs(nums[i] - nums[i+1]) <= t:
                    return True
            return False
        
        if t == 0:
            table = {}
            for i, v in enumerate(nums):
                if v in table:
                    if i - table[v] <= k:
                        return True
                table[v] = i
            return False
        
        num = nums[0]
        p_ans = []
        p_ans.append(sum([(num-i, num+i) for i in range(t+1)], ()))
        for n in nums[1:]:
            if n in set(sum(p_ans, ())):
                return True
            p_ans.append(sum([(n-i, n+i) for i in range(t+1)], ()))
            p_ans = p_ans[-k:]
        return False

