# 题目


# 思路

思路1

动态规划，dp[j][i] 表示字符串从 j 到 i 是否是为回文串，即当 s[j] == s[i] 如果 dp[j+1][i-1] 也是回文串，那么字符串从 j 到 i 也是回文串，即 dp[j][i] 为真，对于dp[j][i] 为真时，增加一个计数器。

思路2

采用中心扩展法解题，外层循环为遍历所有的字符，内层循环为以所遍历的字符向两边扩展，如果满足要求就在总数上加1，不满足要求则停止扩展

# 代码

思路1

class Solution(object):
    def countSubstrings(self, s):
        """
        :type s: str
        :rtype: int
        """
        n = len(s)
        dp = [[0] * n for _ in range(n)]
        count = 0
        for i in range(n):
            for j in range(i+1):
                if s[i] == s[j] and (i - j + 1 <= 3 or dp[j+1][i-1]):
                    dp[j][i] = 1
                    count += 1
        return count
        
思路2

class Solution(object):
    def countSubstrings(self, s):
        """
        :type s: str
        :rtype: int
        """
        res = n = len(s)
        for i in range(n):
            left, right = i-1, i+1
            while left >= 0 and right < n and s[left] == s[right]:
                left -= 1
                right += 1
                res += 1
            left, right = i, i+1
            while left >= 0 and right < n and s[left] == s[right]:
                left -= 1
                right += 1
                res += 1
        return res
        
        


