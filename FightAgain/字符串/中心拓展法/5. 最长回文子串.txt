# 题目

给定一个字符串 s，找到 s 中最长的回文子串。你可以假设 s 的最大长度为 1000。

示例 1：

输入: "babad"
输出: "bab"
注意: "aba" 也是一个有效答案。
示例 2：

输入: "cbbd"
输出: "bb"


# 思路

思路1
动态规划，dp[j][i] 表示字符串从 j 到 i 是否是为回文串，即当 s[j] == s[i] 如果 dp[j+1][i-1] 也是回文串，那么字符串从 j 到 i 也是回文串，即 dp[j][i] 为真。


# 代码

思路1
class Solution(object):
    def longestPalindrome(self, s):
        """
        :type s: str
        :rtype: str
        """
        n = len(s)
        dp = [[0] * n for _ in range(n)]
        res = ''
        for i in range(n):
            for j in range(i+1):
                if s[j] == s[i] and (i - j + 1 <= 3 or dp[j+1][i-1]):
                    dp[j][i] = 1
                    res = max(res, s[j:i+1], key=len)
        return res
        
        
