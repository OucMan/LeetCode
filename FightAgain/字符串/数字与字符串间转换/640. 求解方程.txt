# 题目

求解一个给定的方程，将x以字符串"x=#value"的形式返回。该方程仅包含'+'，' - '操作，变量 x 和其对应系数。

如果方程没有解，请返回“No solution”。

如果方程有无限解，则返回“Infinite solutions”。

如果方程中只有一个解，要保证返回值 x 是一个整数。

示例 1：

输入: "x+5-3+x=6+x-2"
输出: "x=2"
示例 2:

输入: "x=x"
输出: "Infinite solutions"
示例 3:

输入: "2x=x"
输出: "x=0"
示例 4:

输入: "2x+3x-6x=x+2"
输出: "x=-1"
示例 5:

输入: "x=x+2"
输出: "No solution"


# 思路

根据等号，区分左右两侧的表达式

对表达式进行如下处理：

遍历，遇到减号，前面增加加号，然后按照加号分割每一个项。对包含每一个项的集合进行处理，区分带未知数的项和常数项。得到未知数的系数，以及常数和

最后得到的是
a * x + b = c * x + d

(a-c) * x = d -b

如果a-c等于0，d-b等于0，那么存在无穷解
如果a-c等于0，d-b不等于0，那么无解
否则返回x = (d-b) / (a-c)

# 代码

class Solution(object):
    def solveEquation(self, equation):
        """
        :type equation: str
        :rtype: str
        """
        tmp = equation.split('=')
        left = tmp[0]
        right = tmp[1]

        a, b = self.helper(left)
        c, d = self.helper(right)

        if a - c == 0 and d - b == 0:
            return 'Infinite solutions'
        elif a - c == 0 and d - b != 0:
            return 'No solution'
        else:
            return 'x=' + str(int((d - b) / (a - c)))

    def helper(self, s):
        new_s = ''
        for i in s:
            if i == '-':
                new_s += '+-'
            else:
                new_s += i
        if new_s[0] == '+':
            new_s = new_s[1:]
        items = new_s.split('+')
        x_items = []
        n_items = []
        for it in items:
            if 'x' not in it:
                n_items.append(int(it))
            else:
                if it == 'x':
                    x_items.append(1)
                elif it == '-x':
                    x_items.append(-1)
                else:
                    x_items.append(int(it[:-1]))
        return sum(x_items), sum(n_items)


