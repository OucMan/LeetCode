# 题目

给定一个 24 小时制（小时:分钟 "HH:MM"）的时间列表，找出列表中任意两个时间的最小时间差并以分钟数表示。

 

示例 1：

输入：timePoints = ["23:59","00:00"]
输出：1
示例 2：

输入：timePoints = ["00:00","23:59","00:00"]
输出：0
 

提示：

2 <= timePoints <= 2 * 104
timePoints[i] 格式为 "HH:MM"



# 思路

转成分钟制，排序，别忘记最后一个时间和第一个时间之间的间隔


# 代码

class Solution(object):
    def findMinDifference(self, timePoints):
        """
        :type timePoints: List[str]
        :rtype: int
        """
        tmp = [self.helper(x) for x in timePoints]
        tmp.sort()
        res = float('inf')
        for i in range(1, len(tmp)):
            res = min(res, tmp[i] - tmp[i-1])
        one = 1440 + tmp[0] - tmp[-1]
        return min(res, one)
    
    def helper(self, time):
        time = time.split(':')
        return int(time[0]) * 60 + int(time[1])

