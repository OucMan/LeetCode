# 题目

给你两个二进制字符串，返回它们的和（用二进制表示）。

输入为 非空 字符串且只包含数字 1 和 0。

 

示例 1:

输入: a = "11", b = "1"
输出: "100"
示例 2:

输入: a = "1010", b = "1011"
输出: "10101"
 

提示：

每个字符串仅由字符 '0' 或 '1' 组成。
1 <= a.length, b.length <= 10^4
字符串如果不是 "0" ，就都不含前导零。


# 思路

通过补充前导0使得两个字符串长度一致， 从后向前处理，注意进位

# 代码

class Solution(object):
    def addBinary(self, a, b):
        """
        :type a: str
        :type b: str
        :rtype: str
        """
        if len(a) < len(b):
            a = '0' * (len(b) - len(a)) + a
        else:
            b = '0' * (len(a) - len(b)) + b
        jinwei = 0
        res = ''
        for i in range(len(a)-1, -1, -1):
            res = str((int(a[i]) + int(b[i]) + jinwei) % 2) + res
            jinwei = (int(a[i]) + int(b[i]) + jinwei) // 2
        if jinwei == 1:
            res = '1' + res
        return res
        
        
