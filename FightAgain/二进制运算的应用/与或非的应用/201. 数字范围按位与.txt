# 题目

给定范围 [m, n]，其中 0 <= m <= n <= 2147483647，返回此范围内所有数字的按位与（包含 m, n 两端点）。

示例 1: 

输入: [5,7]
输出: 4
示例 2:

输入: [0,1]
输出: 0


# 思路

与运算必须全为1，才为1，因此我们只要得到两端数字的最长共同前缀，后面补充一定位数的0即可，得到的结果就是与运算后的结果。

因此，我们使用左移来得到最长共同前缀，并且记录下移动的次数。


# 代码

class Solution(object):
    def rangeBitwiseAnd(self, m, n):
        """
        :type m: int
        :type n: int
        :rtype: int
        """
        move = 0
        while m < n:
            m = m >> 1
            n = n >> 1
            move += 1
        return n << move
        
        
