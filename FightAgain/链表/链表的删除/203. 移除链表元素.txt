# 题目

删除链表中等于给定值 val 的所有节点。

示例:

输入: 1->2->6->3->4->5->6, val = 6
输出: 1->2->3->4->5


# 思路

创建新的链表首部，因为有可能原链表首部的元素等于要删除的值。设置当前元素的指针，以及前一个元素的指针，如果当前元素的值等于要删除的值，那么将前一个元素的后指针指向当前元素的下一个，向后移动一个当前元素的指针；如果当前元素不能等于要删除的值，那么同时向后移动前一个元素的指针和当前指针，最终返回新头部的下一个元素（结果链表的头部）


# 代码

# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def removeElements(self, head, val):
        """
        :type head: ListNode
        :type val: int
        :rtype: ListNode
        """
        if not head:
            None

        new_head = pre = ListNode(0)
        new_head.next = head

        while head:
            if head.val == val:
                pre.next = head.next
            else:
                pre = pre.next
            head = head.next
        
        return new_head.next
        
        
