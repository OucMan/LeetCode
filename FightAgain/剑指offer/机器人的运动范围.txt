# 题目

地上有一个m行n列的方格，从坐标 [0,0] 到坐标 [m-1,n-1] 。一个机器人从坐标 [0, 0] 的格子开始移动，它每次可以向左、右、上、下移动一格（不能移动到方格外），也不能进入行坐标和列坐标的数位之和大于k的格子。例如，当k为18时，机器人能够进入方格 [35, 37] ，因为3+5+3+7=18。但它不能进入方格 [35, 38]，因为3+5+3+8=19。请问该机器人能够到达多少个格子？

 

示例 1：

输入：m = 2, n = 3, k = 1
输出：3
示例 2：

输入：m = 3, n = 1, k = 0
输出：1
提示：

1 <= n,m <= 100
0 <= k <= 20


# 思路

深度搜索

# 代码

class Solution(object):
    def movingCount(self, m, n, k):
        """
        :type m: int
        :type n: int
        :type k: int
        :rtype: int
        """
        visited = set()
        self.helper(m, n, 0, 0, visited, k)
        return len(visited)
    
    def helper(self, m, n, i, j, visited, k):
        if not 0 <= i < m or not 0 <= j < n or (i, j) in visited or self.check(i, j) > k:
            return
        visited.add((i,j))
        for x, y in [(0,1),(0,-1),(1,0),(-1,0)]:
            n_i, n_j = i + x, j + y
            self.helper(m, n, n_i, n_j, visited, k)
    
    def check(self, r, c):
        return sum(list(map(int, list(str(r))))) + sum(list(map(int, list(str(c)))))
        
        
