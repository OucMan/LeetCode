# 题目

统计一个数字在排序数组中出现的次数。

 

示例 1:

输入: nums = [5,7,7,8,8,10], target = 8
输出: 2
示例 2:

输入: nums = [5,7,7,8,8,10], target = 6
输出: 0
 

限制：

0 <= 数组长度 <= 50000



# 思路

字典或者普通遍历，或者二分查找


# 代码

class Solution(object):
    def search(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """
        if not nums:
            return 0
        left = self.find_left(nums, target)
        if left == -1:
            return 0
        right = self.find_right(nums, target)
        return right - left + 1
    
    def find_left(self, nums, target):
        if not nums:
            return -1
        l, r = 0, len(nums) - 1
        while l < r:
            mid = l + (r-l) // 2
            if nums[mid] == target:
                r = mid
            elif nums[mid] < target:
                l = mid + 1
            else:
                r = mid - 1
        return l if nums[l] == target else -1
    
    def find_right(self, nums, target):
        if not nums:
            return -1
        l, r = 0, len(nums) - 1
        while l <= r:
            mid = l + (r-l)//2
            if nums[mid] == target:
                l = mid + 1
            elif nums[mid] < target:
                l = mid + 1
            else:
                r = mid - 1
        return r


