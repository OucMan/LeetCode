# 题目

输入一棵二叉搜索树，将该二叉搜索树转换成一个排序的循环双向链表。要求不能创建任何新的节点，只能调整树中节点指针的指向。


# 思路


# 代码

"""
# Definition for a Node.
class Node(object):
    def __init__(self, val, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right
"""
class Solution(object):
    def treeToDoublyList(self, root):
        """
        :type root: Node
        :rtype: Node
        """
        if not root:
            return None
        
        self.head = None
        self.pre = None

        def helper(root):
            if not root:
                return
            helper(root.left)

            if not self.head:
                self.head = root
            else:
                self.pre.right = root
                root.left = self.pre
            self.pre = root
            helper(root.right)
        
        helper(root)

        self.pre.right = self.head
        self.head.left= self.pre
        return self.head


