# 题目

输入整数数组 arr ，找出其中最小的 k 个数。例如，输入4、5、1、6、2、7、3、8这8个数字，则最小的4个数字是1、2、3、4。

 

示例 1：

输入：arr = [3,2,1], k = 2
输出：[1,2] 或者 [2,1]
示例 2：

输入：arr = [0,1,2,1], k = 1
输出：[0]
 

限制：

0 <= k <= arr.length <= 10000
0 <= arr[i] <= 10000


# 思路

排序

或者

大顶堆

# 代码

import heapq

class Solution(object):
    def getLeastNumbers(self, arr, k):
        """
        :type arr: List[int]
        :type k: int
        :rtype: List[int]
        """
        if k == 0:
            return []
        heap = [-x for x in arr[:k]]
        heapq.heapify(heap)
        for a in arr[k:]:
            if -1 * heap[0] > a:
                heapq.heappop(heap)
                heapq.heappush(heap, -1 * a)
        return [-x for x in heap]
