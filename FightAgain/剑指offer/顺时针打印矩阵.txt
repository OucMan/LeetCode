# 题目

输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字。

 

示例 1：

输入：matrix = [[1,2,3],[4,5,6],[7,8,9]]
输出：[1,2,3,6,9,8,7,4,5]
示例 2：

输入：matrix = [[1,2,3,4],[5,6,7,8],[9,10,11,12]]
输出：[1,2,3,4,8,12,11,10,9,5,6,7]
 

限制：

0 <= matrix.length <= 100
0 <= matrix[i].length <= 100


# 思路



# 代码

class Solution(object):
    def spiralOrder(self, matrix):
        """
        :type matrix: List[List[int]]
        :rtype: List[int]
        """
        if not matrix or not matrix[0]:
            return []
        top, bottom, left, right = 0, len(matrix)-1, 0, len(matrix[0])-1
        res = []
        num = len(matrix) * len(matrix[0])

        while num > 0:
            i = left
            while i <= right and num > 0:
                res.append(matrix[top][i])
                i += 1
                num -= 1
            top += 1
            i = top
            while i <= bottom and num > 0:
                res.append(matrix[i][right])
                i += 1
                num -= 1
            right -= 1
            i = right
            while i >= left and num > 0:
                res.append(matrix[bottom][i])
                i -= 1
                num -= 1
            bottom -= 1
            i = bottom
            while i >= top and num > 0:
                res.append(matrix[i][left])
                i -= 1
                num -= 1
            left += 1
        return res

