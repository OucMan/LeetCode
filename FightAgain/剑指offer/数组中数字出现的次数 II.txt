# 题目

在一个数组 nums 中除一个数字只出现一次之外，其他数字都出现了三次。请找出那个只出现一次的数字。

 

示例 1：

输入：nums = [3,4,3,3]
输出：4
示例 2：

输入：nums = [9,1,7,9,7,9,7]
输出：1
 

限制：

1 <= nums.length <= 10000
1 <= nums[i] < 2^31


# 思路

数学法

(sum(set(nums)) * 3 - sum(nums)) // 2

位运算

数为32位，对于每一位，统计所有的元素在该位上出现的1的次数，然后模3，结果为最终结果在该位上的值。


# 代码

class Solution(object):
    def singleNumber(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        res = 0
        for i in range(32):
            idx = 1 << i
            c = 0
            for n in nums:
                if idx & n != 0:
                    c += 1
            if c % 3 == 1:
                res = res | idx
        return res



