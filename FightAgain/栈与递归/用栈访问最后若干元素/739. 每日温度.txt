# 题目

请根据每日 气温 列表，重新生成一个列表。对应位置的输出为：要想观测到更高的气温，至少需要等待的天数。如果气温在这之后都不会升高，请在该位置用 0 来代替。

例如，给定一个列表 temperatures = [73, 74, 75, 71, 69, 72, 76, 73]，你的输出应该是 [1, 1, 4, 2, 1, 1, 0, 0]。

提示：气温 列表长度的范围是 [1, 30000]。每个气温的值的均为华氏度，都是在 [30, 100] 范围内的整数。


# 思路

栈

温度列表的长度为n，最终结果初始化[0] * n

最后一个温度对应结果肯定是0， 将最后一个温度，以及对应的索引放到栈中，即stack = [(T[-1], n-1)]，然后从倒数第二个开始倒序处理温度列表，假如当前温度小于栈顶的温度，那么便找到了比当前温度大的最近的一次，即栈顶，然后将当前小的温度入栈；假如当前温度大于等于栈顶的温度，那么循环弹出栈顶，直到找到比当前温度大的栈顶元素，或者栈为空，栈为空，说明后续没有比此温度更高的温度。

# 代码

class Solution(object):
    def dailyTemperatures(self, T):
        """
        :type T: List[int]
        :rtype: List[int]
        """
        if not T or len(T) == 1:
            return []
        
        stack = [(T[-1], len(T)-1)]
        res = [0] * len(T)
        for i in range(len(T)-2, -1, -1):
            while stack and T[i] >= stack[-1][0]:
                stack.pop()
            if stack:
                res[i] = stack[-1][1] - i
            stack.append((T[i], i))
        return res




