# 题目

给定一个整数数组 nums ，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。

示例:

输入: [-2,1,-3,4,-1,2,1,-5,4]
输出: 6
解释: 连续子数组 [4,-1,2,1] 的和最大，为 6。
进阶:

如果你已经实现复杂度为 O(n) 的解法，尝试使用更为精妙的分治法求解。


# 思路

定义两个变量，一个用来存储局部最大值（即遍历到某一元素，以该元素结尾的最大值），一个变量保存全局的最大值

首先，如果整个列表全为负数，则直接返回最大的负数


# 代码

class Solution(object):
    def maxSubArray(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        if not nums:
            return 0
        if max(nums) < 0:
            return max(nums)
        local_max, global_max = 0, 0
        for n in nums:
            local_max = max(0, local_max + n)
            global_max = max(global_max, local_max)
        return global_max
        
        
