# 题目

给定两个字符串 s1 和 s2，写一个函数来判断 s2 是否包含 s1 的排列。

换句话说，第一个字符串的排列之一是第二个字符串的子串。

示例1:

输入: s1 = "ab" s2 = "eidbaooo"
输出: True
解释: s2 包含 s1 的排列之一 ("ba").
 

示例2:

输入: s1= "ab" s2 = "eidboaoo"
输出: False
 

注意：

输入的字符串只包含小写字母
两个字符串的长度都在 [1, 10,000] 之间


# 思路

单指针 + 字母频次表，一次遍历


# 代码

class Solution(object):
    def checkInclusion(self, s1, s2):
        """
        :type s1: str
        :type s2: str
        :rtype: bool
        """
        l1, l2 = len(s1), len(s2)
        c1, c2 = [0] * 26, [0] * 26
        if l1 > l2:
            return False
        for i in range(l1):
            c1[ord(s1[i])-97] += 1
            c2[ord(s2[i])-97] += 1
        for i in range(l2-l1+1):
            if c1 == c2:
                return True
            if i != l2-l1:
                c2[ord(s2[i])-97] -= 1
                c2[ord(s2[i+l1])-97] += 1
        
        return False

