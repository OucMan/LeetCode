####################题目描述#####################

给你两个有序整数数组 nums1 和 nums2，请你将 nums2 合并到 nums1 中，使 nums1 成为一个有序数组。

说明:

初始化 nums1 和 nums2 的元素数量分别为 m 和 n 。
你可以假设 nums1 有足够的空间（空间大小大于或等于 m + n）来保存 nums2 中的元素。
 

示例:

输入:
nums1 = [1,2,3,0,0,0], m = 3
nums2 = [2,5,6],       n = 3

输出: [1,2,2,3,5,6]

##################思路#####################

双指针，从后向前

###################代码#######################

class Solution(object):
    def merge(self, nums1, m, nums2, n):
        """
        :type nums1: List[int]
        :type m: int
        :type nums2: List[int]
        :type n: int
        :rtype: None Do not return anything, modify nums1 in-place instead.
        """
        index = m + n - 1
        r1 = m - 1
        r2 = n - 1
        while r1 >=0 and r2 >= 0:
            if nums1[r1] >= nums2[r2]:
                nums1[index] = nums1[r1]
                r1 = r1 - 1
                index = index - 1
            else:
                nums1[index] = nums2[r2]
                r2 = r2 - 1
                index = index - 1
        if r2 >= 0:
            nums1[:r2+1] = nums2[:r2+1]
        
