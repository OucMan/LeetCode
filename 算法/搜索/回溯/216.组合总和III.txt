###############题目描述################

找出所有相加之和为 n 的 k 个数的组合。组合中只允许含有 1 - 9 的正整数，并且每种组合中不存在重复的数字。

说明：

所有数字都是正整数。
解集不能包含重复的组合。 
示例 1:

输入: k = 3, n = 7
输出: [[1,2,4]]
示例 2:

输入: k = 3, n = 9
输出: [[1,2,6], [1,3,5], [2,3,4]]

################代码#######################

class Solution(object):
    def combinationSum3(self, k, n):
        """
        :type k: int
        :type n: int
        :rtype: List[List[int]]
        """
        if n < 1 or k > 9 or k <= 0:
            return []
        
        res = []
        self.dps(range(1,10), n, k, res, [])
        return res
    
    def dps(self, array, total, k, res, path):
        if k == 0 and total == 0:
            res.append(path)
        if k ==0 and total != 0:
            return 
        if total == 0 and k != 0:
            return
        for i in range(len(array)):
            if total >= array[i]:
                self.dps(array[i+1:], total-array[i], k-1, res, path+[array[i]])
                
                
