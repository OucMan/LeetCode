###############题目描述###################

在未排序的数组中找到第 k 个最大的元素。请注意，你需要找的是数组排序后的第 k 个最大的元素，而不是第 k 个不同的元素。

示例 1:

输入: [3,2,1,5,6,4] 和 k = 2
输出: 5
示例 2:

输入: [3,2,3,1,2,4,5,5,6] 和 k = 4
输出: 4
说明:

你可以假设 k 总是有效的，且 1 ≤ k ≤ 数组的长度。

#################代码#########################

####################排序后直接取出

class Solution(object):
    def findKthLargest(self, nums, k):
        """
        :type nums: List[int]
        :type k: int
        :rtype: int
        """
        if not nums or len(nums) < k:
            return None
        nums.sort()
        return nums[-k]
        
######################快速思想，找到数组中元素的位置，当分界点的索引为ｋ－１的时候，它就是第ｋ大元素

class Solution(object):
    def findKthLargest(self, nums, k):
        """
        :type nums: List[int]
        :type k: int
        :rtype: int
        """
        if not nums or len(nums) < k:
            return None
        left = 0
        right = len(nums)-1
        while left <= right:
            index = self.partition(nums, left, right)
            if index == k-1:
                return nums[index]
            elif index > k-1:
                right = index - 1
            else:
                left = index + 1
    
    def partition(self, nums, left, right):
        tmp = nums[right]
        start = left
        for i in range(left, right):
            if nums[i] >= tmp:
                nums[i], nums[start] = nums[start], nums[i]
                start += 1
        nums[start], nums[right] = nums[right], nums[start]
        return start

