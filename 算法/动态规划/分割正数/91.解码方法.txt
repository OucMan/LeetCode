############题目描述######################

一条包含字母 A-Z 的消息通过以下方式进行了编码：

'A' -> 1
'B' -> 2
...
'Z' -> 26
给定一个只包含数字的非空字符串，请计算解码方法的总数。

示例 1:

输入: "12"
输出: 2
解释: 它可以解码为 "AB"（1 2）或者 "L"（12）。
示例 2:

输入: "226"
输出: 3
解释: 它可以解码为 "BZ" (2 26), "VF" (22 6), 或者 "BBF" (2 2 6) 。

############思路#############

dp[i]代表解析s[:i+1]字符串所有可能的方式数目。
dp[i] = dp[i-1] if s[i] != '0'
       + dp[i-2] if '9' < s[i-1:i+1] < '27'

#############代码###############

class Solution(object):
    def numDecodings(self, s):
        """
        :type s: str
        :rtype: int
        """
        if not s or len(s) <= 0 or s[0]=='0':
            return 0
        
        dp = [0] * len(s)
        dp[0] = 1
        for i in range(1, len(s)):
            if s[i] != '0':
                dp[i] = dp[i-1]
            if '09'<s[i-1:i+1]<'27':
                if i != 1:
                    dp[i] += dp[i-2]
                else:
                    dp[i] += 1
        return dp[-1]
