################题目描述####################

最初在一个记事本上只有一个字符 'A'。你每次可以对这个记事本进行两种操作：

Copy All (复制全部) : 你可以复制这个记事本中的所有字符(部分的复制是不允许的)。
Paste (粘贴) : 你可以粘贴你上一次复制的字符。
给定一个数字 n 。你需要使用最少的操作次数，在记事本中打印出恰好 n 个 'A'。输出能够打印出 n 个 'A' 的最少操作次数。

示例 1:

输入: 3
输出: 3
解释:
最初, 我们只有一个字符 'A'。
第 1 步, 我们使用 Copy All 操作。
第 2 步, 我们使用 Paste 操作来获得 'AA'。
第 3 步, 我们使用 Paste 操作来获得 'AAA'。
说明:

n 的取值范围是 [1, 1000] 。

####################解题思路###################

dp[i]表示得到长度为i的字符串需要的最小操作数。对于i来说，j为可以被i整除的最大数，那么长度为i的字符串由长度为j的字符串复制粘贴得到，这样操作才最小，操作数为i/j次，其中1次copy，（i/j）-1次粘贴。dp[i]的最大值是i，即由‘A’慢慢粘贴得到。

##################代码#########################

class Solution(object):
    def minSteps(self, n):
        """
        :type n: int
        :rtype: int
        """
        if n <= 1:
            return 0
        dp = [0] * (n+1)
        for i in range(2, n+1):
            dp[i] = i
            for j in range(i-1, 0, -1):
                if i % j == 0:
                    dp[i] = dp[j] + i/j
                    break
        return dp[-1]
        
