#################题目描述##################

给定一个整数数组 nums，求出数组从索引 i 到 j  (i ≤ j) 范围内元素的总和，包含 i,  j 两点。

示例：

给定 nums = [-2, 0, 3, -5, 2, -1]，求和函数为 sumRange()

sumRange(0, 2) -> 1
sumRange(2, 5) -> -1
sumRange(0, 5) -> -3
说明:

你可以假设数组不可变。
会多次调用 sumRange 方法。

##################思路####################

使用一个辅助数组，保存前n项和，因此通过该数组两个元素做差来得到结果

###################代码##################

class NumArray(object):

    def __init__(self, nums):
        """
        :type nums: List[int]
        """
        tmp = [0]
        for i in nums:
            tmp.append(tmp[-1]+i)
        self.nums = tmp
        

    def sumRange(self, i, j):
        """
        :type i: int
        :type j: int
        :rtype: int
        """
        if i<=j:
            return self.nums[j+1] - self.nums[i]
        else:
            return 0
        
